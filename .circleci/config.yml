# https://circleci.com/docs/2.0/workflows/#using-workspaces-to-share-data-among-jobs
TERMINUS_SITE: &TERMINUS_SITE "PANTHEON_PROJECT_MACHINE_NAME"
THEME_NAME: &THEME_NAME "site_theme"

defaults: &defaults
  docker:
    - image: quay.io/pantheon-public/build-tools-ci:6.x
  working_directory: ~/example_drops_8_composer
  environment:
    #=========================================================================
    # In addition to the environment variables defined in this file, also
    # add the following variables in the Circle CI UI.
    #
    # See: https://circleci.com/docs/2.0/env-vars/
    #
    # TERMINUS_SITE:  Name of the Pantheon site to run tests on, e.g. my_site
    # TERMINUS_TOKEN: The Pantheon machine token
    # GITHUB_TOKEN:   The GitHub personal access token
    # GIT_EMAIL:      The email address to use when making commits
    #
    # TEST_SITE_NAME: The name of the test site to provide when installing.
    # ADMIN_PASSWORD: The admin password to use when installing.
    # ADMIN_EMAIL:    The email address to give the admin when installing.
    #=========================================================================
    TZ: "/usr/share/zoneinfo/America/Los_Angeles"

    # The variables below usually do not need to be modified.

    #======================================================================================================================================
    # Circle CI 2.0 does not yet expand environment variables so they have to be manually EXPORTed
    # Once environment variables can be expanded the variables below can be uncommented and the EXPORTs in set-up-globals.sh can be removed
    # See: https://discuss.circleci.com/t/unclear-how-to-work-with-user-variables-circleci-provided-env-variables/12810/11
    # See: https://discuss.circleci.com/t/environment-variable-expansion-in-working-directory/11322
    # See: https://discuss.circleci.com/t/circle-2-0-global-environment-variables/8681
    #======================================================================================================================================

    NOTIFY: 'scripts/github/add-commit-comment {project} {sha} "Created multidev environment [{site}#{env}]({dashboard-url})." {site-url}'
    ADMIN_USERNAME: admin
    # BUILD_TOOLS_VERSION: ^2.0.0-alpha4
    TERM: dumb
    TERMINUS_SITE: *TERMINUS_SITE
    THEME_NAME: *THEME_NAME
    DEFAULT_BRANCH: main

version: 2.1

orbs:
  ci-tools: kanopi/ci-tools@1.7.1
  slack: circleci/slack@3.4.2

jobs:

  compile-theme:
    docker:
      # This version of node should match whats in the theme NVM setup
      - image: cimg/node:12.22.5
    environment:
      - THEME_NAME: *THEME_NAME
    working_directory: ~/project
    steps:
      - checkout

      - run:
          name: Install node packages and compile theme.
          command: |
            cd "./web/themes/custom/$THEME_NAME"
            npm install
            ./node_modules/.bin/gulp build

      - persist_to_workspace:
          root: ./web/themes/custom/site_theme
          paths:
            - css
            - js

  deploy_to_pantheon:
    <<: *defaults
    steps:
      - checkout
      - ci-tools/copy-ssh-key
      - attach_workspace:
          at: /tmp/workspace
      - run:
          # Set TERMINUS_ENV and related environment variables.
          # https://github.com/pantheon-systems/docker-build-tools-ci/blob/6.x/scripts/set-environment
          name: setup-environment-vars
          command: /build-tools-ci/scripts/set-environment

      - restore_cache:
          keys:
            - drupal-{{ checksum "composer.lock" }}

      - run:
          name: run PHP build step
          command: composer -n build-assets

      - save_cache:
          key: drupal-{{ checksum "composer.lock" }}
          paths:
            - vendor

      - run:
          name: Copy compiled theme assets.
          command: |
            cp -r /tmp/workspace/css "web/themes/custom/$THEME_NAME"
            cp -r /tmp/workspace/js "web/themes/custom/$THEME_NAME"

      # Deploy to Pantheon
      - run:
          name: deploy to Pantheon
          command: ./.circleci/scripts/pantheon/dev-multidev
          no_output_timeout: 1h

#      - slack/notify:
#          message: "Finished multidev build ${MULTIDEV_SITE_URL}\n
#          Branch: *${CIRCLE_BRANCH}*\n
#          PR: ${CIRCLE_PULL_REQUEST}"
#          include_job_number_field: false
#          include_project_field: false
#          webhook: https://hooks.slack.com/services/T02BTKQ5F/B0225B1RPV1/9999111100000

  # Updates modules/composer packages once a week.
  composer_lock_updater:
    <<: *defaults
    steps:
      - checkout
      - ci-tools/copy-ssh-key
      - run:
          name: setup-environment-vars
          command: /build-tools-ci/scripts/set-environment

      - run:
          name: Authenticate with Terminus
          command: terminus -n auth:login --machine-token="$TERMINUS_TOKEN"

      - run:
          name: run composer lock updater
          command: set -e && terminus project:clu $TERMINUS_SITE

workflows:
  version: 2
  build_deploy_and_test:
    jobs:
      - compile-theme:
          context: kanopi-code
      - deploy_to_pantheon:
          context: kanopi-code
          requires:
            - compile-theme
      - ci-tools/lighthouse:
          context: kanopi-code
          pre-steps:
            - ci-tools/set-pantheon-url:
                site_id: *TERMINUS_SITE
                store_as: LIGHTHOUSE_URL
          url: "${LIGHTHOUSE_URL}"
          requires:
            - deploy_to_pantheon
          post-steps:
            - ci-tools/post-to-github-commit:
                body: '@$(ls /opt/reports/*/comment.txt)'
                when: 'on_fail'

      - ci-tools/pa11y-audit:
          context: kanopi-code
          urls: "${PR_ENV_URL}"
          # Replace the primary URL with a Pantheon multidev URL.
          pre-steps:
            - ci-tools/set-pantheon-url:
                site_id: *TERMINUS_SITE
                store_as: PR_ENV_URL
          # Post the pa11y results file as a comment on the PR.
          post-steps:
            - ci-tools/post-to-github-commit:
                body: '@/tmp/pa11y-ci-results.txt'
                when: 'on_fail'
          requires:
            - deploy_to_pantheon

      - ci-tools/phpcs-drupal:
          context: kanopi-code
          extensions: 'php,module,inc,install,test,profile,theme,css,info,txt,md'
          location: 'web/modules/custom/ web/themes/custom/'
          standards: 'Drupal,DrupalPractice'
          report: '/tmp/phpcs.txt'
          # Post the results file as a comment on the PR.
          post-steps:
            - ci-tools/post-artifact-to-github:
                body-prefix: "Click here to view the report:"
                body-title: phpcs
                search-for: tmp/phpcs-report.txt
                when: on_fail

      - ci-tools/backstopjs:
          context: kanopi-code
          # Defines the pages, and gives them a label.  It is a comma separated list.
          # Add as many as you need.
          urls: '/|Homepage'
          # Sets the URL to test to be the Pantheon multidev.
          pre-steps:
            - ci-tools/set-pantheon-url:
                site_id: *TERMINUS_SITE
                store_as: TEST_URL
            - ci-tools/set-pantheon-url:
                site_id: *TERMINUS_SITE
                site_env: "dev"
                store_as: REFERENCE_URL
          # Posts a link to the report to the PR.
          post-steps:
            - ci-tools/post-artifact-to-github:
                body-prefix: "Click here to view the report:"
                body-title: BackstopJS
                search-for: html_report/index.html
                when: 'on_fail'
          requires:
            - deploy_to_pantheon
          # Don't run it on main because that is the url it tests against.
          filters:
            branches:
              ignore: main

  scheduled_update_check:
    triggers:
      - schedule:
          cron: "5 8 * * 0"
          filters:
            branches:
              only:
                - main
    jobs:
      - composer_lock_updater:
          context: kanopi-code
